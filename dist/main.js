(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"*,\n*::after,\n*::before {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 15px;\n\n}\n\n:root {\n    --prjct-tsk-background-clr: #d5eaec;\n    --background-clr: #2e3335;\n    --main-font-clr: #1b1e1f;\n    --project-task-hover: #2e3335;\n\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    background-color: var(--background-clr);\n    align-items: center;\n    position: relative;\n    margin-top: 50px;\n    height: 100vh;\n}\n\n#container {\n    min-height: 70%;\n}\n\n.projects,\n.tasks {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 10px;\n    background-color: var(--prjct-tsk-background-clr);\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n    width: 300px;\n    overflow: scroll;\n}\n\n.projects {\n    max-height: 45%;\n    margin-bottom: 20px;\n}\n\n.projects > .project {\n    display: flex;\n    flex-shrink: 0;\n    align-items: center;\n    padding-left: 20px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    color: var(--main-font-clr);\n    background-color: white;\n    border-radius: 8px;\n}\n\n.tasks > .task {\n    display: flex;\n    flex-direction: column;\n    flex-shrink: 0;\n    align-items: flex-start;\n    justify-content: flex-start;\n    padding-top: 15px;\n    padding-bottom: 15px;\n    padding-left: 20px;\n    border-radius: 7px;\n    background-color: white;\n    color: var(--main-font-clr);\n    border: solid 4px var(--background-clr);\n}\n\n.tasks > .task .details-btn,\n.task-details > .close-button,\n.submit,\n.tasks > .task .delete-button {\n    border: none;\n    padding: 10px;\n    margin-top: 10px;\n    font-weight: bold;\n    border-radius: 7px;\n    background-color: var(--prjct-tsk-background-clr);\n    cursor: pointer;\n}\n\n.btn-container {\n    display: flex;\n    gap: 10px;\n}\n\n.task-details {\n    position: fixed;\n    display: flex;\n    flex-direction: column;\n    /* gap: 5px; */\n    top: 30%;\n    max-width: 60%;\n    background-color: white;\n    padding: 20px;\n    border-radius: 8px;\n    transform: scale(0);\n}\n\n.task-details > h3 {\n    margin: 10px 0 10px 0;\n}\n\n.task-details.active {\n    position: fixed;\n    top: 30%;\n    /* width: 40%;\n    height: 60%; */\n    background-color: white;\n    transform: scale(1);\n}\n\n.task-details > .close-button {\n    width: 64px;\n}\n\n.project.active {\n    border: solid 4px var(--background-clr)\n}\n\n.modal {\n    position: fixed;\n    transform: scale(0);\n    top: 30%;\n    background-color: white;\n    border-radius: 8px;\n    transition: transform 250ms;\n    z-index: 10;\n}\n\n.modal.active {\n    transform: scale(1);\n}\n\n\n.task-form {\n    padding: 25px 25px;\n    font-weight: bold;\n}\n\n.task-form .inner {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.task-form input::placeholder,\n.task-form textarea::placeholder {\n    font-weight: bold;\n}\n\n.task-form textarea {\n    resize: none;\n    height: 100px;\n}\n\n#overlay {\n    position: fixed;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: rgba(0,0,0, .5);\n    pointer-events: none;\n}\n\n#overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}\n\n.create,\n.add-task {\n    border: none;\n    background-color: var(--prjct-tsk-background-clr);\n    padding: 20px;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n    font-size: 14px;\n    width: 135px;\n    font-weight: bold;\n    box-shadow: 0px 0px 0px white;\n    transition: box-shadow 500ms;\n}\n\n.create:hover,\n.add-task:hover {\n    box-shadow: 23px 0px 0px white;\n    color: var(--project-task-hover);\n    cursor: pointer;\n\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;IAGI,sBAAsB;IACtB,UAAU;IACV,SAAS;IACT,yCAAyC;IACzC,eAAe;;AAEnB;;AAEA;IACI,mCAAmC;IACnC,yBAAyB;IACzB,wBAAwB;IACxB,6BAA6B;;AAEjC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uCAAuC;IACvC,mBAAmB;IACnB,kBAAkB;IAClB,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,eAAe;AACnB;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,aAAa;IACb,iDAAiD;IACjD,4BAA4B;IAC5B,+BAA+B;IAC/B,8BAA8B;IAC9B,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,cAAc;IACd,mBAAmB;IACnB,kBAAkB;IAClB,iBAAiB;IACjB,oBAAoB;IACpB,2BAA2B;IAC3B,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,cAAc;IACd,uBAAuB;IACvB,2BAA2B;IAC3B,iBAAiB;IACjB,oBAAoB;IACpB,kBAAkB;IAClB,kBAAkB;IAClB,uBAAuB;IACvB,2BAA2B;IAC3B,uCAAuC;AAC3C;;AAEA;;;;IAII,YAAY;IACZ,aAAa;IACb,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;IAClB,iDAAiD;IACjD,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,eAAe;IACf,aAAa;IACb,sBAAsB;IACtB,cAAc;IACd,QAAQ;IACR,cAAc;IACd,uBAAuB;IACvB,aAAa;IACb,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,eAAe;IACf,QAAQ;IACR;kBACc;IACd,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI;AACJ;;AAEA;IACI,eAAe;IACf,mBAAmB;IACnB,QAAQ;IACR,uBAAuB;IACvB,kBAAkB;IAClB,2BAA2B;IAC3B,WAAW;AACf;;AAEA;IACI,mBAAmB;AACvB;;;AAGA;IACI,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;;IAEI,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,eAAe;IACf,UAAU;IACV,MAAM;IACN,OAAO;IACP,SAAS;IACT,QAAQ;IACR,iCAAiC;IACjC,oBAAoB;AACxB;;AAEA;IACI,UAAU;IACV,mBAAmB;AACvB;;AAEA;;IAEI,YAAY;IACZ,iDAAiD;IACjD,aAAa;IACb,4BAA4B;IAC5B,6BAA6B;IAC7B,eAAe;IACf,YAAY;IACZ,iBAAiB;IACjB,6BAA6B;IAC7B,4BAA4B;AAChC;;AAEA;;IAEI,8BAA8B;IAC9B,gCAAgC;IAChC,eAAe;;AAEnB",sourcesContent:["*,\n*::after,\n*::before {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 15px;\n\n}\n\n:root {\n    --prjct-tsk-background-clr: #d5eaec;\n    --background-clr: #2e3335;\n    --main-font-clr: #1b1e1f;\n    --project-task-hover: #2e3335;\n\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    background-color: var(--background-clr);\n    align-items: center;\n    position: relative;\n    margin-top: 50px;\n    height: 100vh;\n}\n\n#container {\n    min-height: 70%;\n}\n\n.projects,\n.tasks {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 10px;\n    background-color: var(--prjct-tsk-background-clr);\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n    width: 300px;\n    overflow: scroll;\n}\n\n.projects {\n    max-height: 45%;\n    margin-bottom: 20px;\n}\n\n.projects > .project {\n    display: flex;\n    flex-shrink: 0;\n    align-items: center;\n    padding-left: 20px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    color: var(--main-font-clr);\n    background-color: white;\n    border-radius: 8px;\n}\n\n.tasks > .task {\n    display: flex;\n    flex-direction: column;\n    flex-shrink: 0;\n    align-items: flex-start;\n    justify-content: flex-start;\n    padding-top: 15px;\n    padding-bottom: 15px;\n    padding-left: 20px;\n    border-radius: 7px;\n    background-color: white;\n    color: var(--main-font-clr);\n    border: solid 4px var(--background-clr);\n}\n\n.tasks > .task .details-btn,\n.task-details > .close-button,\n.submit,\n.tasks > .task .delete-button {\n    border: none;\n    padding: 10px;\n    margin-top: 10px;\n    font-weight: bold;\n    border-radius: 7px;\n    background-color: var(--prjct-tsk-background-clr);\n    cursor: pointer;\n}\n\n.btn-container {\n    display: flex;\n    gap: 10px;\n}\n\n.task-details {\n    position: fixed;\n    display: flex;\n    flex-direction: column;\n    /* gap: 5px; */\n    top: 30%;\n    max-width: 60%;\n    background-color: white;\n    padding: 20px;\n    border-radius: 8px;\n    transform: scale(0);\n}\n\n.task-details > h3 {\n    margin: 10px 0 10px 0;\n}\n\n.task-details.active {\n    position: fixed;\n    top: 30%;\n    /* width: 40%;\n    height: 60%; */\n    background-color: white;\n    transform: scale(1);\n}\n\n.task-details > .close-button {\n    width: 64px;\n}\n\n.project.active {\n    border: solid 4px var(--background-clr)\n}\n\n.modal {\n    position: fixed;\n    transform: scale(0);\n    top: 30%;\n    background-color: white;\n    border-radius: 8px;\n    transition: transform 250ms;\n    z-index: 10;\n}\n\n.modal.active {\n    transform: scale(1);\n}\n\n\n.task-form {\n    padding: 25px 25px;\n    font-weight: bold;\n}\n\n.task-form .inner {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.task-form input::placeholder,\n.task-form textarea::placeholder {\n    font-weight: bold;\n}\n\n.task-form textarea {\n    resize: none;\n    height: 100px;\n}\n\n#overlay {\n    position: fixed;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: rgba(0,0,0, .5);\n    pointer-events: none;\n}\n\n#overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}\n\n.create,\n.add-task {\n    border: none;\n    background-color: var(--prjct-tsk-background-clr);\n    padding: 20px;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n    font-size: 14px;\n    width: 135px;\n    font-weight: bold;\n    box-shadow: 0px 0px 0px white;\n    transition: box-shadow 500ms;\n}\n\n.create:hover,\n.add-task:hover {\n    box-shadow: 23px 0px 0px white;\n    color: var(--project-task-hover);\n    cursor: pointer;\n\n}"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(i[A]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);o&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],c=0;c<n.length;c++){var A=n[c],s=o.base?A[0]+o.base:A[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var p=t(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=c,e.splice(c,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var A=o(n,r),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),i=t.n(a),c=t(565),A=t.n(c),s=t(216),d=t.n(s),l=t(589),p=t.n(l),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=A(),m.insert=i().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=d(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const f=n=>{const e=document.getElementById("overlay");n.classList.add("active"),e.classList.add("active")},x=n=>{const e=document.getElementById("overlay");n.classList.remove("active"),e.classList.remove("active")};let B=0;function C(n){for(;n.hasChildNodes();)n.removeChild(n.lastChild)}const b=document.querySelector(".create"),I=document.querySelector(".add-task"),g=document.querySelector(".submit"),v=[];b.addEventListener("click",(()=>{B++;const n=((n,e)=>{const t=[];return{title:n,id:e,tasks:t,renderTask:n=>{t.forEach((e=>function(n,e,t,o){const r=document.querySelector(".tasks"),a=document.createElement("div");a.className="task";const i=document.createElement("h3");i.innerText=n;const c=document.createElement("p");c.innerText=e;const A=document.createElement("button");A.innerText="Details",A.className="details-btn";const s=document.createElement("button");s.innerText="Delete",s.className="delete-button";const d=document.createElement("div");d.className="btn-container",A.addEventListener("click",(()=>{!function(n,e){C(n);const t=document.createElement("h3"),o=document.createElement("h3"),r=document.createElement("h3"),a=document.createElement("h3");t.innerText="Title:",o.innerText="Description:",r.innerText="Due date:",a.innerText="Priority:";const i=document.createElement("p");i.innerText=e.title;const c=document.createElement("p");c.innerText=e.description;const A=document.createElement("p");A.innerText=e.dueDate;const s=document.createElement("p");s.innerText=e.priority;const d=document.createElement("button");d.innerText="Close",d.className="close-button",d.addEventListener("click",(()=>{x(n)})),f(n),n.append(t,i,o,c,r,A,a,s,d)}(document.querySelector(".task-details"),t)})),s.addEventListener("click",(()=>{a.remove(),o.removeTask(t)})),d.append(A,s),r.append(a),a.append(i,c,d)}(e.title,e.dueDate,e,n)))},addTask:n=>{n.id=t.length+1,t.push(n)},addProject:(n,e)=>{n.push(e)},removeTask:n=>{const e=t.indexOf(n);t.splice(e,1)}}})(`Project ${B}`,B);n.addProject(v,n),function(n){const e=document.querySelector(".projects"),t=document.createElement("div");t.className="project";const o=document.createElement("h3");o.innerText=n.title,e.append(t),t.append(o),t.addEventListener("click",(()=>{C(document.querySelector(".tasks")),n.renderTask(n)}))}(n),function(){const n=[...document.querySelectorAll(".project")];n.forEach((e=>{e.addEventListener("click",(t=>{n.forEach((n=>n.classList.remove("active"))),e.classList.add("active")}))}))}(),function(n,e){const t=document.getElementById("project");if(0===n.length)return;const o=document.createElement("option");o.value=e,o.innerText=`Project ${e}`,t.append(o)}(v,B)})),I.addEventListener("click",(()=>{document.querySelector('input[id="title"]').value="",document.querySelector('textarea[id="desc"]').value="";const n=document.querySelector(".task-form");f(n)})),overlay.addEventListener("click",(()=>{document.querySelectorAll(".modal").forEach((n=>{x(n)}))})),g.addEventListener("click",(n=>{n.preventDefault();const e=document.querySelector(".task-form");if(0==v.length)return alert("You must create a project first"),void x(e);const t=function(){const n=document.getElementById("title").value,e=document.getElementById("desc").value,t=document.querySelector('input[name="priority"]:checked').id,o=document.getElementById("project"),r=((n,e,t,o,r,a)=>({id:0,title:n,description:e,priority:t,projSelection:o,projectParent:r,dueDate:document.getElementById("date").value}))(n,e,t,o,o.options[o.selectedIndex].text);return r}();v.forEach((n=>{t.projectParent===n.title&&n.addTask(t)})),x(e)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,