(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),a=t(645),c=t.n(a)()(r());c.push([n.id,"*,\n*::after,\n*::before {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: relative;\n    margin-top: 25px;\n    height: 100vh;\n}\n:root {\n    font-family: Arial, Helvetica, sans-serif;\n}\n\n#container {\n    gap: 25px;\n    height: 100%;\n}\n\n.projects,\n.tasks {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    background-color: grey;\n    width: 300px;\n    height: 30%;\n}\n\n.projects > .project {\n    display: flex;\n    flex-shrink: 0;\n    align-items: center;\n    padding-left: 20px;\n    background-color: red;\n    height: 15%;\n}\n\n.tasks > .task {\n    display: flex;\n    flex-shrink: 0;\n    align-items: center;\n    padding-left: 20px;\n    background-color: green;\n    height: 50%;\n}\n\n.project.active {\n    border: solid 2px black;\n}\n\n.modal {\n    position: fixed;\n    transform: scale(0);\n    top: 30%;\n    width: 50%;\n    height: 50%;\n    background-color: blue;\n    transition: transform 250ms;\n    z-index: 10;\n}\n\n.modal.active {\n    transform: scale(1);\n}\n\n.task-form {\n    padding: 25px 25px;\n}\n\n.task-form .inner {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n#overlay {\n    position: fixed;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: rgba(0,0,0, .5);\n    pointer-events: none;\n}\n\n#overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;IAGI,sBAAsB;IACtB,UAAU;IACV,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,kBAAkB;IAClB,gBAAgB;IAChB,aAAa;AACjB;AACA;IACI,yCAAyC;AAC7C;;AAEA;IACI,SAAS;IACT,YAAY;AAChB;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,sBAAsB;IACtB,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;IACb,cAAc;IACd,mBAAmB;IACnB,kBAAkB;IAClB,qBAAqB;IACrB,WAAW;AACf;;AAEA;IACI,aAAa;IACb,cAAc;IACd,mBAAmB;IACnB,kBAAkB;IAClB,uBAAuB;IACvB,WAAW;AACf;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,eAAe;IACf,mBAAmB;IACnB,QAAQ;IACR,UAAU;IACV,WAAW;IACX,sBAAsB;IACtB,2BAA2B;IAC3B,WAAW;AACf;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,UAAU;IACV,MAAM;IACN,OAAO;IACP,SAAS;IACT,QAAQ;IACR,iCAAiC;IACjC,oBAAoB;AACxB;;AAEA;IACI,UAAU;IACV,mBAAmB;AACvB",sourcesContent:["*,\n*::after,\n*::before {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: relative;\n    margin-top: 25px;\n    height: 100vh;\n}\n:root {\n    font-family: Arial, Helvetica, sans-serif;\n}\n\n#container {\n    gap: 25px;\n    height: 100%;\n}\n\n.projects,\n.tasks {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    background-color: grey;\n    width: 300px;\n    height: 30%;\n}\n\n.projects > .project {\n    display: flex;\n    flex-shrink: 0;\n    align-items: center;\n    padding-left: 20px;\n    background-color: red;\n    height: 15%;\n}\n\n.tasks > .task {\n    display: flex;\n    flex-shrink: 0;\n    align-items: center;\n    padding-left: 20px;\n    background-color: green;\n    height: 50%;\n}\n\n.project.active {\n    border: solid 2px black;\n}\n\n.modal {\n    position: fixed;\n    transform: scale(0);\n    top: 30%;\n    width: 50%;\n    height: 50%;\n    background-color: blue;\n    transition: transform 250ms;\n    z-index: 10;\n}\n\n.modal.active {\n    transform: scale(1);\n}\n\n.task-form {\n    padding: 25px 25px;\n}\n\n.task-form .inner {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n#overlay {\n    position: fixed;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: rgba(0,0,0, .5);\n    pointer-events: none;\n}\n\n#overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}"],sourceRoot:""}]);const i=c},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(c[s]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);o&&c[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),c=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(c).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},c=[],i=0;i<n.length;i++){var s=n[i],A=o.base?s[0]+o.base:s[0],l=a[A]||0,d="".concat(A," ").concat(l);a[A]=l+1;var p=t(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=r(u,o);o.byIndex=i,e.splice(i,0,{identifier:d,updater:f,references:1})}c.push(d)}return c}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var c=0;c<a.length;c++){var i=t(a[c]);e[i].references--}for(var s=o(n,r),A=0;A<a.length;A++){var l=t(a[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),c=t.n(a),i=t(565),s=t.n(i),A=t(216),l=t.n(A),d=t(589),p=t.n(d),u=t(426),f={};function m(n){const e=document.querySelector(".tasks"),t=document.createElement("div");t.className="task";const o=document.createElement("h3");o.innerText=n,e.append(t),t.append(o)}f.styleTagTransform=p(),f.setAttributes=s(),f.insert=c().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=l(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;const v=()=>{const n=document.querySelector(".modal"),e=document.getElementById("overlay");n.classList.remove("active"),e.classList.remove("active")},g=document.querySelector(".create"),C=document.querySelector(".add-task"),I=document.querySelector(".submit");let h=0;const y=[];g.addEventListener("click",(()=>{h++,function(n){const e=document.querySelector(".projects"),t=document.createElement("div");t.className="project";const o=document.createElement("h3");o.innerText=n,e.append(t),t.append(o)}(`Project ${h}`);const n={title:`Project ${h}`,id:h};y.push(n),function(){const n=[...document.querySelectorAll(".project")];n.forEach((e=>{e.addEventListener("click",(t=>{n.forEach((n=>n.classList.remove("active"))),e.classList.add("active")}))}))}(),function(n,e){const t=document.getElementById("project");if(0===n.length)return;const o=document.createElement("option");o.value=e,o.innerText=`Project ${e}`,t.append(o)}(y,h)})),C.addEventListener("click",(()=>{const n=document.querySelector(".modal"),e=document.getElementById("overlay");n.classList.add("active"),e.classList.add("active")})),overlay.addEventListener("click",v),I.addEventListener("click",(n=>{n.preventDefault();const e=(()=>{const n=document.getElementById("title").value,e=document.getElementById("desc").value,t=document.querySelector('input[name="priority"]:checked').id,o=document.getElementById("project");return{title:n,description:e,priority:t,projectParent:o.options[o.selectedIndex].text}})();y.forEach((n=>{e.projectParent===n.title&&(n.tasks={...n.tasks,[e.title]:e})})),function(n,e,t){n.forEach((n=>{n.addEventListener("click",(()=>{t(e)}))}))}(y,e.title,m),console.log(y),v()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,